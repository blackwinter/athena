#! /usr/bin/ruby

#--
###############################################################################
#                                                                             #
# prometheus_conv -- Convert prometheus files to various formats              #
#                                                                             #
# Copyright (C) 2007 University of Cologne,                                   #
#                    Albertus-Magnus-Platz,                                   #
#                    50932 Cologne, Germany                                   #
#                                                                             #
# Authors:                                                                    #
#     Jens Wille <jens.wille@uni-koeln.de>                                    #
#                                                                             #
# prometheus_conv is free software; you can redistribute it and/or modify it  #
# under the terms of the GNU General Public License as published by the Free  #
# Software Foundation; either version 2 of the License, or (at your option)   #
# any later version.                                                          #
#                                                                             #
# prometheus_conv is distributed in the hope that it will be useful, but      #
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY  #
# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for #
# more details.                                                               #
#                                                                             #
# You should have received a copy of the GNU General Public License along     #
# with prometheus_conv [*]; if not, write to the Free Software Foundation,    #
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.              #
#                                                                             #
# [*] For the complete text of the GNU General Public License see the file    #
#     COPYING or point your browser at <http://www.gnu.org/licenses/gpl.txt>  #
#                                                                             #
###############################################################################
#++

require 'optparse'
require 'yaml'

$: << File.join(File.dirname(__FILE__), '..', 'lib')

require 'prometheus_conv'

USAGE = "Usage: #{$0} [-h|--help] [options]"

abort USAGE if ARGV.empty?

options = {
  :config => 'config.yaml',
  :input  => STDIN,
  :output => STDOUT,
  :target => nil
}

OptionParser.new { |opts|
  opts.banner = USAGE
  opts.separator ''

  opts.on('-c', '--config YAML', "Config file [Default: #{options[:config]}]") { |f|
    abort "Can't find file #{f}" unless File.readable? f

    options[:config] = f
  }

  opts.separator ''

  opts.on('-i', '--input FILE',  "Input file [Default: #{options[:input] == STDIN ? 'STDIN' : options[:input]}]") { |f|
    abort "Can't find file #{f}" unless File.readable? f

    options[:input] = File.open(f, 'r')

    p = File.basename(f).downcase.split('.')
    options[:spec_fallback]   = p.last
    options[:target_fallback] = p[0..-2].join('.')
  }

  opts.on('-s', '--spec SPEC', "Input format (spec) [Default: file ending of <input-file>]") { |s|
    options[:spec] = s.downcase
  }

  opts.on('-L', '--list-specs', "List available input formats (specs) and exit.") {
    puts "Available input formats (specs):"
    PrometheusConv.input_formats.each { |s, k|
      puts "  - #{s} = #{k}"
    }

    exit 0
  }

  opts.separator ''

  opts.on('-o', '--output FILE',  "Output file [Default: #{options[:output] == STDOUT ? 'STDOUT' : options[:output]}]") { |f|
    options[:output] = File.open(f, 'w')

    options[:format_fallback] = f.split('.').last.downcase
  }

  opts.on('-f', '--format FORMAT', "Output format [Default: file ending of <output-file>]") { |f|
    options[:format] = f.downcase
  }

  opts.on('-l', '--list-formats', "List available output formats and exit.") {
    puts "Available output formats:"
    PrometheusConv.output_formats.each { |f, k|
      puts "  - #{f} = #{k}"
    }

    exit 0
  }

  opts.separator ''

  opts.on('-t', '--target ID', "Target whose config to use [Default: <input-file> minus file ending]") { |t|
    options[:target] = t
  }
}.parse!

spec = options[:spec] || options[:spec_fallback]
abort "No input format (spec) specified and none could be inferred." unless spec
abort "Invalid input format (spec) #{spec}. Use '-L' to get a list of available specs." unless PrometheusConv.valid_input_format? spec

format = options[:format] || options[:format_fallback]
abort "No output format specified and none could be inferred." unless format
abort "Invalid output format #{format}. Use '-l' to get a list of available formats." unless PrometheusConv.valid_output_format? format

target = options[:target] || options[:target_fallback]
abort "No target specified and none could be inferred." unless target

config = YAML.load_file(options[:config])[target.to_sym]
abort "Config not found for target #{target}." unless config

warn PrometheusConv.parser(config, spec).parse(options[:input]) { |record|
  options[:output].puts record.to(format)
}.size
